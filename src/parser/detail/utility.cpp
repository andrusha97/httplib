#include <httplib/parser/detail/utility.hpp>


HTTPLIB_OPEN_NAMESPACE


bool detail::is_tchar(char ch) {
    switch (static_cast<unsigned char>(ch)) {
        case 0: return false;
        case 1: return false;
        case 2: return false;
        case 3: return false;
        case 4: return false;
        case 5: return false;
        case 6: return false;
        case 7: return false;
        case 8: return false;
        case 9: return false;
        case 10: return false;
        case 11: return false;
        case 12: return false;
        case 13: return false;
        case 14: return false;
        case 15: return false;
        case 16: return false;
        case 17: return false;
        case 18: return false;
        case 19: return false;
        case 20: return false;
        case 21: return false;
        case 22: return false;
        case 23: return false;
        case 24: return false;
        case 25: return false;
        case 26: return false;
        case 27: return false;
        case 28: return false;
        case 29: return false;
        case 30: return false;
        case 31: return false;
        case 32: return false;
        case 33: return true;
        case 34: return false;
        case 35: return true;
        case 36: return true;
        case 37: return true;
        case 38: return true;
        case 39: return true;
        case 40: return false;
        case 41: return false;
        case 42: return true;
        case 43: return true;
        case 44: return false;
        case 45: return true;
        case 46: return true;
        case 47: return false;
        case 48: return true;
        case 49: return true;
        case 50: return true;
        case 51: return true;
        case 52: return true;
        case 53: return true;
        case 54: return true;
        case 55: return true;
        case 56: return true;
        case 57: return true;
        case 58: return false;
        case 59: return false;
        case 60: return false;
        case 61: return false;
        case 62: return false;
        case 63: return false;
        case 64: return false;
        case 65: return true;
        case 66: return true;
        case 67: return true;
        case 68: return true;
        case 69: return true;
        case 70: return true;
        case 71: return true;
        case 72: return true;
        case 73: return true;
        case 74: return true;
        case 75: return true;
        case 76: return true;
        case 77: return true;
        case 78: return true;
        case 79: return true;
        case 80: return true;
        case 81: return true;
        case 82: return true;
        case 83: return true;
        case 84: return true;
        case 85: return true;
        case 86: return true;
        case 87: return true;
        case 88: return true;
        case 89: return true;
        case 90: return true;
        case 91: return false;
        case 92: return false;
        case 93: return false;
        case 94: return true;
        case 95: return true;
        case 96: return true;
        case 97: return true;
        case 98: return true;
        case 99: return true;
        case 100: return true;
        case 101: return true;
        case 102: return true;
        case 103: return true;
        case 104: return true;
        case 105: return true;
        case 106: return true;
        case 107: return true;
        case 108: return true;
        case 109: return true;
        case 110: return true;
        case 111: return true;
        case 112: return true;
        case 113: return true;
        case 114: return true;
        case 115: return true;
        case 116: return true;
        case 117: return true;
        case 118: return true;
        case 119: return true;
        case 120: return true;
        case 121: return true;
        case 122: return true;
        case 123: return false;
        case 124: return true;
        case 125: return false;
        case 126: return true;
        case 127: return false;
        case 128: return false;
        case 129: return false;
        case 130: return false;
        case 131: return false;
        case 132: return false;
        case 133: return false;
        case 134: return false;
        case 135: return false;
        case 136: return false;
        case 137: return false;
        case 138: return false;
        case 139: return false;
        case 140: return false;
        case 141: return false;
        case 142: return false;
        case 143: return false;
        case 144: return false;
        case 145: return false;
        case 146: return false;
        case 147: return false;
        case 148: return false;
        case 149: return false;
        case 150: return false;
        case 151: return false;
        case 152: return false;
        case 153: return false;
        case 154: return false;
        case 155: return false;
        case 156: return false;
        case 157: return false;
        case 158: return false;
        case 159: return false;
        case 160: return false;
        case 161: return false;
        case 162: return false;
        case 163: return false;
        case 164: return false;
        case 165: return false;
        case 166: return false;
        case 167: return false;
        case 168: return false;
        case 169: return false;
        case 170: return false;
        case 171: return false;
        case 172: return false;
        case 173: return false;
        case 174: return false;
        case 175: return false;
        case 176: return false;
        case 177: return false;
        case 178: return false;
        case 179: return false;
        case 180: return false;
        case 181: return false;
        case 182: return false;
        case 183: return false;
        case 184: return false;
        case 185: return false;
        case 186: return false;
        case 187: return false;
        case 188: return false;
        case 189: return false;
        case 190: return false;
        case 191: return false;
        case 192: return false;
        case 193: return false;
        case 194: return false;
        case 195: return false;
        case 196: return false;
        case 197: return false;
        case 198: return false;
        case 199: return false;
        case 200: return false;
        case 201: return false;
        case 202: return false;
        case 203: return false;
        case 204: return false;
        case 205: return false;
        case 206: return false;
        case 207: return false;
        case 208: return false;
        case 209: return false;
        case 210: return false;
        case 211: return false;
        case 212: return false;
        case 213: return false;
        case 214: return false;
        case 215: return false;
        case 216: return false;
        case 217: return false;
        case 218: return false;
        case 219: return false;
        case 220: return false;
        case 221: return false;
        case 222: return false;
        case 223: return false;
        case 224: return false;
        case 225: return false;
        case 226: return false;
        case 227: return false;
        case 228: return false;
        case 229: return false;
        case 230: return false;
        case 231: return false;
        case 232: return false;
        case 233: return false;
        case 234: return false;
        case 235: return false;
        case 236: return false;
        case 237: return false;
        case 238: return false;
        case 239: return false;
        case 240: return false;
        case 241: return false;
        case 242: return false;
        case 243: return false;
        case 244: return false;
        case 245: return false;
        case 246: return false;
        case 247: return false;
        case 248: return false;
        case 249: return false;
        case 250: return false;
        case 251: return false;
        case 252: return false;
        case 253: return false;
        case 254: return false;
        case 255: return false;
        default: return false;
    }
}

bool detail::is_qdtext(char ch) {
    switch (static_cast<unsigned char>(ch)) {
        case 0: return false;
        case 1: return false;
        case 2: return false;
        case 3: return false;
        case 4: return false;
        case 5: return false;
        case 6: return false;
        case 7: return false;
        case 8: return false;
        case 9: return true;
        case 10: return false;
        case 11: return false;
        case 12: return false;
        case 13: return false;
        case 14: return false;
        case 15: return false;
        case 16: return false;
        case 17: return false;
        case 18: return false;
        case 19: return false;
        case 20: return false;
        case 21: return false;
        case 22: return false;
        case 23: return false;
        case 24: return false;
        case 25: return false;
        case 26: return false;
        case 27: return false;
        case 28: return false;
        case 29: return false;
        case 30: return false;
        case 31: return false;
        case 32: return true;
        case 33: return true;
        case 34: return false;
        case 35: return true;
        case 36: return true;
        case 37: return true;
        case 38: return true;
        case 39: return true;
        case 40: return true;
        case 41: return true;
        case 42: return true;
        case 43: return true;
        case 44: return true;
        case 45: return true;
        case 46: return true;
        case 47: return true;
        case 48: return true;
        case 49: return true;
        case 50: return true;
        case 51: return true;
        case 52: return true;
        case 53: return true;
        case 54: return true;
        case 55: return true;
        case 56: return true;
        case 57: return true;
        case 58: return true;
        case 59: return true;
        case 60: return true;
        case 61: return true;
        case 62: return true;
        case 63: return true;
        case 64: return true;
        case 65: return true;
        case 66: return true;
        case 67: return true;
        case 68: return true;
        case 69: return true;
        case 70: return true;
        case 71: return true;
        case 72: return true;
        case 73: return true;
        case 74: return true;
        case 75: return true;
        case 76: return true;
        case 77: return true;
        case 78: return true;
        case 79: return true;
        case 80: return true;
        case 81: return true;
        case 82: return true;
        case 83: return true;
        case 84: return true;
        case 85: return true;
        case 86: return true;
        case 87: return true;
        case 88: return true;
        case 89: return true;
        case 90: return true;
        case 91: return true;
        case 92: return false;
        case 93: return true;
        case 94: return true;
        case 95: return true;
        case 96: return true;
        case 97: return true;
        case 98: return true;
        case 99: return true;
        case 100: return true;
        case 101: return true;
        case 102: return true;
        case 103: return true;
        case 104: return true;
        case 105: return true;
        case 106: return true;
        case 107: return true;
        case 108: return true;
        case 109: return true;
        case 110: return true;
        case 111: return true;
        case 112: return true;
        case 113: return true;
        case 114: return true;
        case 115: return true;
        case 116: return true;
        case 117: return true;
        case 118: return true;
        case 119: return true;
        case 120: return true;
        case 121: return true;
        case 122: return true;
        case 123: return true;
        case 124: return true;
        case 125: return true;
        case 126: return true;
        case 127: return false;
        case 128: return true;
        case 129: return true;
        case 130: return true;
        case 131: return true;
        case 132: return true;
        case 133: return true;
        case 134: return true;
        case 135: return true;
        case 136: return true;
        case 137: return true;
        case 138: return true;
        case 139: return true;
        case 140: return true;
        case 141: return true;
        case 142: return true;
        case 143: return true;
        case 144: return true;
        case 145: return true;
        case 146: return true;
        case 147: return true;
        case 148: return true;
        case 149: return true;
        case 150: return true;
        case 151: return true;
        case 152: return true;
        case 153: return true;
        case 154: return true;
        case 155: return true;
        case 156: return true;
        case 157: return true;
        case 158: return true;
        case 159: return true;
        case 160: return true;
        case 161: return true;
        case 162: return true;
        case 163: return true;
        case 164: return true;
        case 165: return true;
        case 166: return true;
        case 167: return true;
        case 168: return true;
        case 169: return true;
        case 170: return true;
        case 171: return true;
        case 172: return true;
        case 173: return true;
        case 174: return true;
        case 175: return true;
        case 176: return true;
        case 177: return true;
        case 178: return true;
        case 179: return true;
        case 180: return true;
        case 181: return true;
        case 182: return true;
        case 183: return true;
        case 184: return true;
        case 185: return true;
        case 186: return true;
        case 187: return true;
        case 188: return true;
        case 189: return true;
        case 190: return true;
        case 191: return true;
        case 192: return true;
        case 193: return true;
        case 194: return true;
        case 195: return true;
        case 196: return true;
        case 197: return true;
        case 198: return true;
        case 199: return true;
        case 200: return true;
        case 201: return true;
        case 202: return true;
        case 203: return true;
        case 204: return true;
        case 205: return true;
        case 206: return true;
        case 207: return true;
        case 208: return true;
        case 209: return true;
        case 210: return true;
        case 211: return true;
        case 212: return true;
        case 213: return true;
        case 214: return true;
        case 215: return true;
        case 216: return true;
        case 217: return true;
        case 218: return true;
        case 219: return true;
        case 220: return true;
        case 221: return true;
        case 222: return true;
        case 223: return true;
        case 224: return true;
        case 225: return true;
        case 226: return true;
        case 227: return true;
        case 228: return true;
        case 229: return true;
        case 230: return true;
        case 231: return true;
        case 232: return true;
        case 233: return true;
        case 234: return true;
        case 235: return true;
        case 236: return true;
        case 237: return true;
        case 238: return true;
        case 239: return true;
        case 240: return true;
        case 241: return true;
        case 242: return true;
        case 243: return true;
        case 244: return true;
        case 245: return true;
        case 246: return true;
        case 247: return true;
        case 248: return true;
        case 249: return true;
        case 250: return true;
        case 251: return true;
        case 252: return true;
        case 253: return true;
        case 254: return true;
        case 255: return true;
        default: return false;
    }
}

bool detail::is_quoted_pair_char(char ch) {
    switch (static_cast<unsigned char>(ch)) {
        case 0: return false;
        case 1: return false;
        case 2: return false;
        case 3: return false;
        case 4: return false;
        case 5: return false;
        case 6: return false;
        case 7: return false;
        case 8: return false;
        case 9: return true;
        case 10: return false;
        case 11: return false;
        case 12: return false;
        case 13: return false;
        case 14: return false;
        case 15: return false;
        case 16: return false;
        case 17: return false;
        case 18: return false;
        case 19: return false;
        case 20: return false;
        case 21: return false;
        case 22: return false;
        case 23: return false;
        case 24: return false;
        case 25: return false;
        case 26: return false;
        case 27: return false;
        case 28: return false;
        case 29: return false;
        case 30: return false;
        case 31: return false;
        case 32: return true;
        case 33: return true;
        case 34: return true;
        case 35: return true;
        case 36: return true;
        case 37: return true;
        case 38: return true;
        case 39: return true;
        case 40: return true;
        case 41: return true;
        case 42: return true;
        case 43: return true;
        case 44: return true;
        case 45: return true;
        case 46: return true;
        case 47: return true;
        case 48: return true;
        case 49: return true;
        case 50: return true;
        case 51: return true;
        case 52: return true;
        case 53: return true;
        case 54: return true;
        case 55: return true;
        case 56: return true;
        case 57: return true;
        case 58: return true;
        case 59: return true;
        case 60: return true;
        case 61: return true;
        case 62: return true;
        case 63: return true;
        case 64: return true;
        case 65: return true;
        case 66: return true;
        case 67: return true;
        case 68: return true;
        case 69: return true;
        case 70: return true;
        case 71: return true;
        case 72: return true;
        case 73: return true;
        case 74: return true;
        case 75: return true;
        case 76: return true;
        case 77: return true;
        case 78: return true;
        case 79: return true;
        case 80: return true;
        case 81: return true;
        case 82: return true;
        case 83: return true;
        case 84: return true;
        case 85: return true;
        case 86: return true;
        case 87: return true;
        case 88: return true;
        case 89: return true;
        case 90: return true;
        case 91: return true;
        case 92: return true;
        case 93: return true;
        case 94: return true;
        case 95: return true;
        case 96: return true;
        case 97: return true;
        case 98: return true;
        case 99: return true;
        case 100: return true;
        case 101: return true;
        case 102: return true;
        case 103: return true;
        case 104: return true;
        case 105: return true;
        case 106: return true;
        case 107: return true;
        case 108: return true;
        case 109: return true;
        case 110: return true;
        case 111: return true;
        case 112: return true;
        case 113: return true;
        case 114: return true;
        case 115: return true;
        case 116: return true;
        case 117: return true;
        case 118: return true;
        case 119: return true;
        case 120: return true;
        case 121: return true;
        case 122: return true;
        case 123: return true;
        case 124: return true;
        case 125: return true;
        case 126: return true;
        case 127: return false;
        case 128: return true;
        case 129: return true;
        case 130: return true;
        case 131: return true;
        case 132: return true;
        case 133: return true;
        case 134: return true;
        case 135: return true;
        case 136: return true;
        case 137: return true;
        case 138: return true;
        case 139: return true;
        case 140: return true;
        case 141: return true;
        case 142: return true;
        case 143: return true;
        case 144: return true;
        case 145: return true;
        case 146: return true;
        case 147: return true;
        case 148: return true;
        case 149: return true;
        case 150: return true;
        case 151: return true;
        case 152: return true;
        case 153: return true;
        case 154: return true;
        case 155: return true;
        case 156: return true;
        case 157: return true;
        case 158: return true;
        case 159: return true;
        case 160: return true;
        case 161: return true;
        case 162: return true;
        case 163: return true;
        case 164: return true;
        case 165: return true;
        case 166: return true;
        case 167: return true;
        case 168: return true;
        case 169: return true;
        case 170: return true;
        case 171: return true;
        case 172: return true;
        case 173: return true;
        case 174: return true;
        case 175: return true;
        case 176: return true;
        case 177: return true;
        case 178: return true;
        case 179: return true;
        case 180: return true;
        case 181: return true;
        case 182: return true;
        case 183: return true;
        case 184: return true;
        case 185: return true;
        case 186: return true;
        case 187: return true;
        case 188: return true;
        case 189: return true;
        case 190: return true;
        case 191: return true;
        case 192: return true;
        case 193: return true;
        case 194: return true;
        case 195: return true;
        case 196: return true;
        case 197: return true;
        case 198: return true;
        case 199: return true;
        case 200: return true;
        case 201: return true;
        case 202: return true;
        case 203: return true;
        case 204: return true;
        case 205: return true;
        case 206: return true;
        case 207: return true;
        case 208: return true;
        case 209: return true;
        case 210: return true;
        case 211: return true;
        case 212: return true;
        case 213: return true;
        case 214: return true;
        case 215: return true;
        case 216: return true;
        case 217: return true;
        case 218: return true;
        case 219: return true;
        case 220: return true;
        case 221: return true;
        case 222: return true;
        case 223: return true;
        case 224: return true;
        case 225: return true;
        case 226: return true;
        case 227: return true;
        case 228: return true;
        case 229: return true;
        case 230: return true;
        case 231: return true;
        case 232: return true;
        case 233: return true;
        case 234: return true;
        case 235: return true;
        case 236: return true;
        case 237: return true;
        case 238: return true;
        case 239: return true;
        case 240: return true;
        case 241: return true;
        case 242: return true;
        case 243: return true;
        case 244: return true;
        case 245: return true;
        case 246: return true;
        case 247: return true;
        case 248: return true;
        case 249: return true;
        case 250: return true;
        case 251: return true;
        case 252: return true;
        case 253: return true;
        case 254: return true;
        case 255: return true;
        default: return false;
    }
}

bool detail::is_whitespace(char ch) {
    unsigned char uch = ch;
    return uch == 0x20 || uch == 0x09;
}

bool detail::is_alpha(char ch) {
    unsigned char uch = ch;
    return (uch >= 0x41 && uch <= 0x5a) || (uch >= 0x61 && uch <= 0x7a);
}

bool detail::is_digit(char ch) {
    unsigned char uch = ch;
    return uch >= 0x30 && uch <= 0x39;
}

boost::optional<std::string> detail::parse_token(boost::string_view &data) {
    std::size_t token_size = 0;

    for (; token_size < data.size(); ++token_size) {
        if (!is_tchar(data[token_size])) {
            break;
        }
    }

    if (token_size == 0) {
        return boost::none;
    } else {
        std::string result = data.substr(0, token_size).to_string();
        data = data.substr(token_size);
        return result;
    }
}

boost::optional<std::string> detail::parse_quoted_string(boost::string_view &data) {
    if (data.empty()) {
        return boost::none;
    }

    if (data[0] != '"') {
        return boost::none;
    }

    std::string result;

    auto it = data.begin();
    auto end = data.end();
    ++it;

    bool in_quoted_pair = false;

    for (; it != end; ++it) {
        if (in_quoted_pair) {
            if (is_quoted_pair_char(*it)) {
                result.push_back(*it);
                in_quoted_pair = false;
            } else {
                return boost::none;
            }
        } else if (*it == '"') {
            ++it;
            data = data.substr(it - data.begin());
            return result;
        } else if (*it == '\\') {
            in_quoted_pair = true;
        } else if (is_qdtext(*it)) {
            result.push_back(*it);
        } else {
            return boost::none;
        }
    }

    return boost::none;
}

void detail::skip_optional_whitespaces(boost::string_view &data) {
    auto it = data.begin();
    auto end = data.end();

    while (it != end && is_whitespace(*it)) {
        ++it;
    }

    data = data.substr(it - data.begin());
}


void detail::remove_trailing_whitespaces(std::string &s) {
    while (!s.empty() && is_whitespace(s.back())) {
        s.pop_back();
    }
}


HTTPLIB_CLOSE_NAMESPACE
